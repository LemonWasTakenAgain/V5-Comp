{"mode":"Text","textContent":"from vex import *\nimport urandom\n\n\n\n\n# Defining Ports/Hardware\ncontroller_1 = Controller(PRIMARY)\nleftfront = Motor(Ports.PORT11, GearSetting.RATIO_18_1, False)\nleftrear = Motor(Ports.PORT12, GearSetting.RATIO_18_1, False)\nrightfront = Motor(Ports.PORT1, GearSetting.RATIO_18_1, True)\nrightrear = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\nmotor_20 = Motor(Ports.PORT20, GearSetting.RATIO_18_1, False)\nmotor_5 = Motor(Ports.PORT5, GearSetting.RATIO_18_1, False)\nbrain=Brain()\n\nwait(30, MSEC)\n\n# Initializing brain to defaults\nvexcode_brain_precision = 0\nvexcode_console_precision = 0\nvexcode_controller_1_precision = 0\nmyVariable = 0\n\n# Begin the started sequence\n\n# Controller Analog robot wheel movement\n\ndef when_started1():\n    global myVariable, vexcode_brain_precision, vexcode_console_precision, vexcode_controller_1_precision\n    while True:\n        leftfront.set_velocity((controller_1.axis3.position() + (controller_1.axis4.position() + controller_1.axis1.position())), PERCENT)\n        leftfront.spin(FORWARD)\n        leftrear.set_velocity((controller_1.axis3.position() - (controller_1.axis4.position() - controller_1.axis1.position())), PERCENT)\n        leftrear.spin(FORWARD)\n        rightfront.set_velocity((controller_1.axis3.position() - (controller_1.axis4.position() + controller_1.axis1.position())), PERCENT)\n        rightfront.spin(FORWARD)\n        rightrear.set_velocity((controller_1.axis3.position() + (controller_1.axis4.position() - controller_1.axis1.position())), PERCENT)\n        rightrear.spin(FORWARD)\n        wait(5, MSEC)\n\n# Team Slogan/Robot name text on brain\n\ndef when_started2():\n    global myVariable, vexcode_brain_precision, vexcode_console_precision, vexcode_controller_1_precision\n    brain.screen.set_cursor(1, 10)\n    vexcode_brain_precision = 0\n    controller_1.screen.print(\"Barry B Boxton Benson\")\n    brain.screen.print(\"Barry B Boxton Benson\")\n\n# Control for L1 to spin motor reverse on port 20 aka Horizontal Expansion\n\ndef onevent_controller_1buttonL1_pressed_0():\n    global myVariable, vexcode_brain_precision, vexcode_console_precision, vexcode_controller_1_precision\n    while controller_1.buttonL1.pressing():\n        motor_20.set_velocity(100, PERCENT)\n        motor_20.set_max_torque(100, PERCENT)\n        motor_20.spin(REVERSE)\n        wait(5, MSEC)\n    motor_20.stop()\n\n# Control for R1 to spin motor on L1 on port 5 aka Wall Roller\n\ndef onevent_controller_1buttonR1_pressed_0():\n    global myVariable, vexcode_brain_precision, vexcode_console_precision, vexcode_controller_1_precision\n    while controller_1.buttonR1.pressing():\n        motor_5.set_velocity(50, PERCENT)\n        motor_5.set_max_torque(100, PERCENT)\n        motor_5.spin(REVERSE)\n        wait(5, MSEC)\n    motor_5.stop()\n\n# Control for L1 to spin motor reverse on port 20 aka Horizontal Expansion\n\ndef onevent_controller_1buttonL2_pressed_0():\n    global myVariable, vexcode_brain_precision, vexcode_console_precision, vexcode_controller_1_precision\n    while controller_1.buttonL2.pressing():\n        motor_20.set_velocity(100, PERCENT)\n        motor_20.set_max_torque(100, PERCENT)\n        motor_20.spin(FORWARD)\n        wait(5, MSEC)\n    motor_20.stop()\n\n\n\ndef onevent_controller_1buttonR2_pressed_0():\n    global myVariable, vexcode_brain_precision, vexcode_console_precision, vexcode_controller_1_precision\n    while controller_1.buttonR2.pressing():\n        motor_5.set_velocity(50, PERCENT)\n        motor_5.set_max_torque(100, PERCENT)\n        motor_5.spin(FORWARD)\n        wait(5, MSEC)\n    motor_5.stop()\n\n\n\n# Autonomous Code\n\ndef onauton_autonomous_0():\n    global myVariable, vexcode_brain_precision, vexcode_console_precision, vexcode_controller_1_precision\n    pass\n\ndef vexcode_auton_function():\n    auton_task_0 = Thread( onauton_autonomous_0 )\n    while( competition.is_autonomous() and competition.is_enabled() ):\n        wait( 10, MSEC )\n    auton_task_0.stop()\n\ndef vexcode_driver_function():\n\n    while( competition.is_driver_control() and competition.is_enabled() ):\n        wait( 10, MSEC )\n\n\n# Comp defining func\n\ncompetition = Competition( vexcode_driver_function, vexcode_auton_function )\n\ncontroller_1.buttonL1.pressed(onevent_controller_1buttonL1_pressed_0)\ncontroller_1.buttonR1.pressed(onevent_controller_1buttonR1_pressed_0)\ncontroller_1.buttonL2.pressed(onevent_controller_1buttonL2_pressed_0)\ncontroller_1.buttonR2.pressed(onevent_controller_1buttonR2_pressed_0)\nwait(15, MSEC)\n\nws2 = Thread( when_started2 )\nwhen_started1()\n","textLanguage":"python","rconfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[11],"name":"leftfront","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[12],"name":"leftrear","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[1],"name":"rightfront","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[2],"name":"rightrear","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[20],"name":"motor_20","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[5],"name":"motor_5","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}